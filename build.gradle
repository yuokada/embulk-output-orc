plugins {
    id "com.jfrog.bintray" version "1.8.5"
    id "com.github.jruby-gradle.base" version "2.0.2"
    id "java"
    id "scala"
    id "checkstyle"
//    id "com.github.spotbugs" version "3.0.1"
    id "org.sonarqube" version "3.5.0.2730"
}
import com.github.jrubygradle.JRubyExec
repositories {
    mavenCentral()
    jcenter()
    maven {
        url "http://dl.bintray.com/embulk-input-s3/maven"
    }
}
configurations {
    provided
    // e.g: compile.exclude group: 'commons-logging', module: 'commons-logging'   // commons-logging api is provided by jcl-over-slf4j
    //    runtime.exclude group: "org.slf4j", module: "slf4j-log4j12"
    runtime.exclude group: 'xml-apis', module: 'xml-apis'
}

version = "0.3.5"
def EMBULK_VERSION = "0.9.23"

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compileOnly    "org.embulk:embulk-core:$EMBULK_VERSION"
    implementation "org.embulk:embulk-core:$EMBULK_VERSION"
    implementation "org.scala-lang:scala-library:2.12.+"

    implementation "org.apache.orc:orc:1.5.4"
    implementation "org.apache.orc:orc-core:1.5.4"
    implementation "org.apache.hadoop:hadoop-hdfs:2.7.5"

    implementation('org.embulk:embulk-util-aws-credentials:0.4.1')
    implementation "com.amazonaws:aws-java-sdk:1.12.399"
    implementation "com.amazonaws:aws-java-sdk-s3:1.12.399"

    implementation("org.apache.hadoop:hadoop-aws:2.7.5") {
        exclude module: 'com.amazonaws:aws-java-sdk'
    }
    implementation 'com.google.guava:guava:24.1-jre'

    testImplementation 'org.jmockit:jmockit:1.38'
    // testImplementation "junit:junit:4.+"
    testImplementation 'org.hamcrest:hamcrest-core:2.2'
    testImplementation 'org.testng:testng:6.14.2'
    testImplementation "org.embulk:embulk-core:$EMBULK_VERSION:tests"
    testImplementation "org.embulk:embulk-standards:$EMBULK_VERSION"
}

sourceSets {
    main {
        scala {
            srcDirs = ['src/main/scala', 'src/main/java']
        }
        java {
            srcDirs = []
        }
    }
}

task classpath(type: Copy, dependsOn: ["jar"]) {
    doFirst { file("classpath").deleteDir() }
    from (configurations.runtime - configurations.provided + files(jar.archivePath))
    into "classpath"
}
clean { delete "classpath" }

checkstyle {
    configFile = file("${project.rootDir}/config/checkstyle/checkstyle.xml")
    toolVersion = '6.14.1'
}
checkstyleMain {
    configFile = file("${project.rootDir}/config/checkstyle/default.xml")
    ignoreFailures = true
}
checkstyleTest {
    configFile = file("${project.rootDir}/config/checkstyle/default.xml")
    ignoreFailures = true
}
task checkstyle(type: Checkstyle) {
    classpath = sourceSets.main.output + sourceSets.test.output
    source = sourceSets.main.allJava + sourceSets.test.allJava
}

task gem(type: JRubyExec, dependsOn: ["gemspec", "classpath"]) {
    jrubyArgs "-S"
    script "gem"
    scriptArgs "build", "${project.name}.gemspec"
    doLast { ant.move(file: "${project.name}-${project.version}.gem", todir: "pkg") }
}

task gemPush(type: JRubyExec, dependsOn: ["gem"]) {
    jrubyArgs "-S"
    script "gem"
    scriptArgs "push", "pkg/${project.name}-${project.version}.gem"
}

task "package"(dependsOn: ["gemspec", "classpath"]) {
    doLast {
        println "> Build succeeded."
        println "> You can run embulk with '-L ${file(".").absolutePath}' argument."
    }
}

task gemspec {
    ext.gemspecFile = file("${project.name}.gemspec")
    inputs.file "build.gradle"
    outputs.file gemspecFile
    doLast { gemspecFile.write($/
Gem::Specification.new do |spec|
  spec.name          = "${project.name}"
  spec.version       = "${project.version}"
  spec.authors       = ["yuokada"]
  spec.summary       = %[Orc output plugin for Embulk]
  spec.description   = %[Dumps records to Orc format file.]
  spec.email         = ["callistoiv+git@gmail.com"]
  spec.licenses      = ["MIT"]
  spec.homepage      = "https://github.com/yuokada/embulk-output-orc"

  spec.files         = `git ls-files`.split("\n") + Dir["classpath/*.jar"]
  spec.test_files    = spec.files.grep(%r"^(test|spec)/")
  spec.require_paths = ["lib"]

  #spec.add_dependency 'YOUR_GEM_DEPENDENCY', ['~> YOUR_GEM_DEPENDENCY_VERSION']
  spec.add_development_dependency 'bundler', ['~> 1.0']
  spec.add_development_dependency 'rake', ['>= 10.0']
end
/$)
    }
}
clean { delete "${project.name}.gemspec" }
